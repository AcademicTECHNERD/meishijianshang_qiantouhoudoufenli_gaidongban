{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport storage from \"@/utils/storage\";\nimport base from \"@/utils/base\";\nexport default {\n  data: function data() {\n    return {\n      // 查看大图\n      dialogVisible: false,\n      // 查看大图\n      dialogImageUrl: \"\",\n      // 组件渲染图片的数组字段，有特殊格式要求\n      fileList: [],\n      fileUrlList: [],\n      myHeaders: {}\n    };\n  },\n  props: [\"tip\", \"action\", \"limit\", \"multiple\", \"fileUrls\"],\n  mounted: function mounted() {\n    this.init();\n    this.myHeaders = {\n      'Token': storage.get(\"Token\")\n    };\n  },\n  watch: {\n    fileUrls: function fileUrls(val, oldVal) {\n      //   console.log(\"new: %s, old: %s\", val, oldVal);\n      this.init();\n    }\n  },\n  computed: {\n    // 计算属性的 getter\n    getActionUrl: function getActionUrl() {\n      // return base.url + this.action + \"?token=\" + storage.get(\"token\");\n      return \"/\".concat(this.$base.name, \"/\") + this.action;\n    }\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      //   console.log(this.fileUrls);\n      if (this.fileUrls) {\n        this.fileUrlList = this.fileUrls.split(\",\");\n        var fileArray = [];\n        this.fileUrlList.forEach(function (item, index) {\n          var url = item;\n          var name = index;\n          var file = {\n            name: name,\n            url: url\n          };\n          fileArray.push(file);\n        });\n        this.setFileList(fileArray);\n      }\n    },\n    handleBeforeUpload: function handleBeforeUpload(file) {},\n    // 上传文件成功后执行\n    handleUploadSuccess: function handleUploadSuccess(res, file, fileList) {\n      if (res && res.code === 0) {\n        fileList[fileList.length - 1][\"url\"] = this.$base.url + \"upload/\" + file.response.file;\n        this.setFileList(fileList);\n        this.$emit(\"change\", this.fileUrlList.join(\",\"));\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 图片上传失败\n    handleUploadErr: function handleUploadErr(err, file, fileList) {\n      this.$message.error(\"文件上传失败\");\n    },\n    // 移除图片\n    handleRemove: function handleRemove(file, fileList) {\n      this.setFileList(fileList);\n      this.$emit(\"change\", this.fileUrlList.join(\",\"));\n    },\n    // 查看大图\n    handleUploadPreview: function handleUploadPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 限制图片数量\n    handleExceed: function handleExceed(files, fileList) {\n      this.$message.warning(\"\\u6700\\u591A\\u4E0A\\u4F20\".concat(this.limit, \"\\u5F20\\u56FE\\u7247\"));\n    },\n    // 重新对fileList进行赋值\n    setFileList: function setFileList(fileList) {\n      var fileArray = [];\n      var fileUrlArray = [];\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\n      var token = storage.get(\"token\");\n      fileList.forEach(function (item, index) {\n        var url = item.url.split(\"?\")[0];\n        var name = item.name;\n        var file = {\n          name: name,\n          url: url + \"?token=\" + token\n        };\n        fileArray.push(file);\n        fileUrlArray.push(url);\n      });\n      this.fileList = fileArray;\n      this.fileUrlList = fileUrlArray;\n    }\n  }\n};","map":{"version":3,"names":["storage","base","data","dialogVisible","dialogImageUrl","fileList","fileUrlList","myHeaders","props","mounted","init","get","watch","fileUrls","val","oldVal","computed","getActionUrl","concat","$base","name","action","methods","split","fileArray","forEach","item","index","url","file","push","setFileList","handleBeforeUpload","handleUploadSuccess","res","code","length","response","$emit","join","$message","error","msg","handleUploadErr","err","handleRemove","handleUploadPreview","handleExceed","files","warning","limit","fileUrlArray","token"],"sources":["src/components/common/FileUpload.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 上传文件组件 -->\r\n    <el-upload\r\n      ref=\"upload\"\r\n      :action=\"getActionUrl\"\r\n      list-type=\"picture-card\"\r\n      :multiple=\"multiple\"\r\n      :limit=\"limit\"\r\n      :headers=\"myHeaders\"\r\n      :file-list=\"fileList\"\r\n      :on-exceed=\"handleExceed\"\r\n      :on-preview=\"handleUploadPreview\"\r\n      :on-remove=\"handleRemove\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :on-error=\"handleUploadErr\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n    >\r\n      <i class=\"el-icon-plus\"></i>\r\n      <div slot=\"tip\" class=\"el-upload__tip\" style=\"color:#838fa1;\">{{tip}}</div>\r\n    </el-upload>\r\n    <el-dialog :visible.sync=\"dialogVisible\" size=\"tiny\" append-to-body>\r\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport storage from \"@/utils/storage\";\r\nimport base from \"@/utils/base\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查看大图\r\n      dialogVisible: false,\r\n      // 查看大图\r\n      dialogImageUrl: \"\",\r\n      // 组件渲染图片的数组字段，有特殊格式要求\r\n      fileList: [],\r\n      fileUrlList: [],\r\n      myHeaders:{}\r\n    };\r\n  },\r\n  props: [\"tip\", \"action\", \"limit\", \"multiple\", \"fileUrls\"],\r\n  mounted() {\r\n    this.init();\r\n    this.myHeaders= {\r\n      'Token':storage.get(\"Token\")\r\n    }\r\n  },\r\n  watch: {\r\n    fileUrls: function(val, oldVal) {\r\n      //   console.log(\"new: %s, old: %s\", val, oldVal);\r\n      this.init();\r\n    }\r\n  },\r\n  computed: {\r\n    // 计算属性的 getter\r\n    getActionUrl: function() {\r\n      // return base.url + this.action + \"?token=\" + storage.get(\"token\");\r\n      return `/${this.$base.name}/` + this.action;\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    init() {\r\n      //   console.log(this.fileUrls);\r\n      if (this.fileUrls) {\r\n        this.fileUrlList = this.fileUrls.split(\",\");\r\n        let fileArray = [];\r\n        this.fileUrlList.forEach(function(item, index) {\r\n          var url = item;\r\n          var name = index;\r\n          var file = {\r\n            name: name,\r\n            url: url\r\n          };\r\n          fileArray.push(file);\r\n        });\r\n        this.setFileList(fileArray);\r\n      }\r\n    },\r\n    handleBeforeUpload(file) {\r\n\t\r\n    },\r\n    // 上传文件成功后执行\r\n    handleUploadSuccess(res, file, fileList) {\r\n      if (res && res.code === 0) {\r\n        fileList[fileList.length - 1][\"url\"] =\r\n          this.$base.url + \"upload/\" + file.response.file;\r\n        this.setFileList(fileList);\r\n        this.$emit(\"change\", this.fileUrlList.join(\",\"));\r\n      } else {\r\n        this.$message.error(res.msg);\r\n      }\r\n    },\r\n    // 图片上传失败\r\n    handleUploadErr(err, file, fileList) {\r\n      this.$message.error(\"文件上传失败\");\r\n    },\r\n    // 移除图片\r\n    handleRemove(file, fileList) {\r\n      this.setFileList(fileList);\r\n      this.$emit(\"change\", this.fileUrlList.join(\",\"));\r\n    },\r\n    // 查看大图\r\n    handleUploadPreview(file) {\r\n      this.dialogImageUrl = file.url;\r\n      this.dialogVisible = true;\r\n    },\r\n    // 限制图片数量\r\n    handleExceed(files, fileList) {\r\n      this.$message.warning(`最多上传${this.limit}张图片`);\r\n    },\r\n    // 重新对fileList进行赋值\r\n    setFileList(fileList) {\r\n      var fileArray = [];\r\n      var fileUrlArray = [];\r\n      // 有些图片不是公开的，所以需要携带token信息做权限校验\r\n      var token = storage.get(\"token\");\r\n      fileList.forEach(function(item, index) {\r\n        var url = item.url.split(\"?\")[0];\r\n        var name = item.name;\r\n        var file = {\r\n          name: name,\r\n          url: url + \"?token=\" + token\r\n        };\r\n        fileArray.push(file);\r\n        fileUrlArray.push(url);\r\n      });\r\n      this.fileList = fileArray;\r\n      this.fileUrlList = fileUrlArray;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"],"mappings":";;;;;;;;AA2BA,OAAAA,OAAA;AACA,OAAAC,IAAA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,aAAA;MACA;MACAC,cAAA;MACA;MACAC,QAAA;MACAC,WAAA;MACAC,SAAA;IACA;EACA;EACAC,KAAA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,IAAA;IACA,KAAAH,SAAA;MACA,SAAAP,OAAA,CAAAW,GAAA;IACA;EACA;EACAC,KAAA;IACAC,QAAA,WAAAA,SAAAC,GAAA,EAAAC,MAAA;MACA;MACA,KAAAL,IAAA;IACA;EACA;EACAM,QAAA;IACA;IACAC,YAAA,WAAAA,aAAA;MACA;MACA,WAAAC,MAAA,MAAAC,KAAA,CAAAC,IAAA,cAAAC,MAAA;IACA;EACA;EACAC,OAAA;IACA;IACAZ,IAAA,WAAAA,KAAA;MACA;MACA,SAAAG,QAAA;QACA,KAAAP,WAAA,QAAAO,QAAA,CAAAU,KAAA;QACA,IAAAC,SAAA;QACA,KAAAlB,WAAA,CAAAmB,OAAA,WAAAC,IAAA,EAAAC,KAAA;UACA,IAAAC,GAAA,GAAAF,IAAA;UACA,IAAAN,IAAA,GAAAO,KAAA;UACA,IAAAE,IAAA;YACAT,IAAA,EAAAA,IAAA;YACAQ,GAAA,EAAAA;UACA;UACAJ,SAAA,CAAAM,IAAA,CAAAD,IAAA;QACA;QACA,KAAAE,WAAA,CAAAP,SAAA;MACA;IACA;IACAQ,kBAAA,WAAAA,mBAAAH,IAAA,GAEA;IACA;IACAI,mBAAA,WAAAA,oBAAAC,GAAA,EAAAL,IAAA,EAAAxB,QAAA;MACA,IAAA6B,GAAA,IAAAA,GAAA,CAAAC,IAAA;QACA9B,QAAA,CAAAA,QAAA,CAAA+B,MAAA,eACA,KAAAjB,KAAA,CAAAS,GAAA,eAAAC,IAAA,CAAAQ,QAAA,CAAAR,IAAA;QACA,KAAAE,WAAA,CAAA1B,QAAA;QACA,KAAAiC,KAAA,gBAAAhC,WAAA,CAAAiC,IAAA;MACA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAP,GAAA,CAAAQ,GAAA;MACA;IACA;IACA;IACAC,eAAA,WAAAA,gBAAAC,GAAA,EAAAf,IAAA,EAAAxB,QAAA;MACA,KAAAmC,QAAA,CAAAC,KAAA;IACA;IACA;IACAI,YAAA,WAAAA,aAAAhB,IAAA,EAAAxB,QAAA;MACA,KAAA0B,WAAA,CAAA1B,QAAA;MACA,KAAAiC,KAAA,gBAAAhC,WAAA,CAAAiC,IAAA;IACA;IACA;IACAO,mBAAA,WAAAA,oBAAAjB,IAAA;MACA,KAAAzB,cAAA,GAAAyB,IAAA,CAAAD,GAAA;MACA,KAAAzB,aAAA;IACA;IACA;IACA4C,YAAA,WAAAA,aAAAC,KAAA,EAAA3C,QAAA;MACA,KAAAmC,QAAA,CAAAS,OAAA,4BAAA/B,MAAA,MAAAgC,KAAA;IACA;IACA;IACAnB,WAAA,WAAAA,YAAA1B,QAAA;MACA,IAAAmB,SAAA;MACA,IAAA2B,YAAA;MACA;MACA,IAAAC,KAAA,GAAApD,OAAA,CAAAW,GAAA;MACAN,QAAA,CAAAoB,OAAA,WAAAC,IAAA,EAAAC,KAAA;QACA,IAAAC,GAAA,GAAAF,IAAA,CAAAE,GAAA,CAAAL,KAAA;QACA,IAAAH,IAAA,GAAAM,IAAA,CAAAN,IAAA;QACA,IAAAS,IAAA;UACAT,IAAA,EAAAA,IAAA;UACAQ,GAAA,EAAAA,GAAA,eAAAwB;QACA;QACA5B,SAAA,CAAAM,IAAA,CAAAD,IAAA;QACAsB,YAAA,CAAArB,IAAA,CAAAF,GAAA;MACA;MACA,KAAAvB,QAAA,GAAAmB,SAAA;MACA,KAAAlB,WAAA,GAAA6C,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}