{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nexport default {\n  data: function data() {\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      user: {},\n      rules: {\n        password: [{\n          required: true,\n          message: \"密码不能为空\",\n          trigger: \"blur\"\n        }],\n        newpassword: [{\n          required: true,\n          message: \"新密码不能为空\",\n          trigger: \"blur\"\n        }],\n        repassword: [{\n          required: true,\n          message: \"确认密码不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$http({\n      url: \"\".concat(this.$storage.get(\"sessionTable\"), \"/session\"),\n      method: \"get\"\n    }).then(function (_ref) {\n      var data = _ref.data;\n      if (data && data.code === 0) {\n        _this.user = data.data;\n      } else {\n        _this.$message.error(data.msg);\n      }\n    });\n  },\n  methods: {\n    onLogout: function onLogout() {\n      this.$storage.remove(\"Token\");\n      this.$router.replace({\n        name: \"login\"\n      });\n    },\n    // 修改密码\n    onUpdateHandler: function onUpdateHandler() {\n      var _this2 = this;\n      this.$refs[\"ruleForm\"].validate(function (valid) {\n        if (valid) {\n          var password = \"\";\n          if (_this2.user.mima) {\n            password = _this2.user.mima;\n          } else if (_this2.user.password) {\n            password = _this2.user.password;\n          }\n          if (_this2.ruleForm.password != password) {\n            _this2.$message.error(\"原密码错误\");\n            return;\n          }\n          if (_this2.ruleForm.newpassword != _this2.ruleForm.repassword) {\n            _this2.$message.error(\"两次密码输入不一致\");\n            return;\n          }\n          _this2.user.password = _this2.ruleForm.newpassword;\n          _this2.user.mima = _this2.ruleForm.newpassword;\n          _this2.$http({\n            url: \"\".concat(_this2.$storage.get(\"sessionTable\"), \"/update\"),\n            method: \"post\",\n            data: _this2.user\n          }).then(function (_ref2) {\n            var data = _ref2.data;\n            if (data && data.code === 0) {\n              _this2.$message({\n                message: \"修改密码成功,下次登录系统生效\",\n                type: \"success\",\n                duration: 1500,\n                onClose: function onClose() {}\n              });\n            } else {\n              _this2.$message.error(data.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","dialogVisible","ruleForm","user","rules","password","required","message","trigger","newpassword","repassword","mounted","_this","$http","url","concat","$storage","get","method","then","_ref","code","$message","error","msg","methods","onLogout","remove","$router","replace","name","onUpdateHandler","_this2","$refs","validate","valid","mima","_ref2","type","duration","onClose"],"sources":["src/views/update-password.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form\r\n      class=\"detail-form-content\"\r\n      ref=\"ruleForm\"\r\n      :rules=\"rules\"\r\n      :model=\"ruleForm\"\r\n      label-width=\"80px\"\r\n    >\r\n      <el-form-item label=\"原密码\" prop=\"password\">\r\n        <el-input v-model=\"ruleForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"newpassword\">\r\n        <el-input v-model=\"ruleForm.newpassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"repassword\">\r\n        <el-input v-model=\"ruleForm.repassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onUpdateHandler\">确 定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      ruleForm: {},\r\n      user: {},\r\n      rules: {\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: \"密码不能为空\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        newpassword: [\r\n          {\r\n            required: true,\r\n            message: \"新密码不能为空\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        repassword: [\r\n          {\r\n            required: true,\r\n            message: \"确认密码不能为空\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$http({\r\n      url: `${this.$storage.get(\"sessionTable\")}/session`,\r\n      method: \"get\"\r\n    }).then(({ data }) => {\r\n      if (data && data.code === 0) {\r\n        this.user = data.data;\r\n      } else {\r\n        this.$message.error(data.msg);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    onLogout() {\r\n      this.$storage.remove(\"Token\");\r\n      this.$router.replace({ name: \"login\" });\r\n    },\r\n    // 修改密码\r\n    onUpdateHandler() {\r\n      this.$refs[\"ruleForm\"].validate(valid => {\r\n        if (valid) {\r\n          var password = \"\";\r\n          if (this.user.mima) {\r\n            password = this.user.mima;\r\n          } else if (this.user.password) {\r\n            password = this.user.password;\r\n          }\r\n          if (this.ruleForm.password != password) {\r\n            this.$message.error(\"原密码错误\");\r\n            return;\r\n          }\r\n          if (this.ruleForm.newpassword != this.ruleForm.repassword) {\r\n            this.$message.error(\"两次密码输入不一致\");\r\n            return;\r\n          }\r\n          this.user.password = this.ruleForm.newpassword;\r\n          this.user.mima = this.ruleForm.newpassword;\r\n          this.$http({\r\n            url: `${this.$storage.get(\"sessionTable\")}/update`,\r\n            method: \"post\",\r\n            data: this.user\r\n          }).then(({ data }) => {\r\n            if (data && data.code === 0) {\r\n              this.$message({\r\n                message: \"修改密码成功,下次登录系统生效\",\r\n                type: \"success\",\r\n                duration: 1500,\r\n                onClose: () => {\r\n                }\r\n              });\r\n            } else {\r\n              this.$message.error(data.msg);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"],"mappings":";;AAyBA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,QAAA;MACAC,IAAA;MACAC,KAAA;QACAC,QAAA,GACA;UACAC,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAC,WAAA,GACA;UACAH,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAE,UAAA,GACA;UACAJ,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MAEA;IACA;EACA;EACAG,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,KAAA;MACAC,GAAA,KAAAC,MAAA,MAAAC,QAAA,CAAAC,GAAA;MACAC,MAAA;IACA,GAAAC,IAAA,WAAAC,IAAA;MAAA,IAAApB,IAAA,GAAAoB,IAAA,CAAApB,IAAA;MACA,IAAAA,IAAA,IAAAA,IAAA,CAAAqB,IAAA;QACAT,KAAA,CAAAT,IAAA,GAAAH,IAAA,CAAAA,IAAA;MACA;QACAY,KAAA,CAAAU,QAAA,CAAAC,KAAA,CAAAvB,IAAA,CAAAwB,GAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAA;MACA,KAAAV,QAAA,CAAAW,MAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;QAAAC,IAAA;MAAA;IACA;IACA;IACAC,eAAA,WAAAA,gBAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAA9B,QAAA;UACA,IAAA2B,MAAA,CAAA7B,IAAA,CAAAiC,IAAA;YACA/B,QAAA,GAAA2B,MAAA,CAAA7B,IAAA,CAAAiC,IAAA;UACA,WAAAJ,MAAA,CAAA7B,IAAA,CAAAE,QAAA;YACAA,QAAA,GAAA2B,MAAA,CAAA7B,IAAA,CAAAE,QAAA;UACA;UACA,IAAA2B,MAAA,CAAA9B,QAAA,CAAAG,QAAA,IAAAA,QAAA;YACA2B,MAAA,CAAAV,QAAA,CAAAC,KAAA;YACA;UACA;UACA,IAAAS,MAAA,CAAA9B,QAAA,CAAAO,WAAA,IAAAuB,MAAA,CAAA9B,QAAA,CAAAQ,UAAA;YACAsB,MAAA,CAAAV,QAAA,CAAAC,KAAA;YACA;UACA;UACAS,MAAA,CAAA7B,IAAA,CAAAE,QAAA,GAAA2B,MAAA,CAAA9B,QAAA,CAAAO,WAAA;UACAuB,MAAA,CAAA7B,IAAA,CAAAiC,IAAA,GAAAJ,MAAA,CAAA9B,QAAA,CAAAO,WAAA;UACAuB,MAAA,CAAAnB,KAAA;YACAC,GAAA,KAAAC,MAAA,CAAAiB,MAAA,CAAAhB,QAAA,CAAAC,GAAA;YACAC,MAAA;YACAlB,IAAA,EAAAgC,MAAA,CAAA7B;UACA,GAAAgB,IAAA,WAAAkB,KAAA;YAAA,IAAArC,IAAA,GAAAqC,KAAA,CAAArC,IAAA;YACA,IAAAA,IAAA,IAAAA,IAAA,CAAAqB,IAAA;cACAW,MAAA,CAAAV,QAAA;gBACAf,OAAA;gBACA+B,IAAA;gBACAC,QAAA;gBACAC,OAAA,WAAAA,QAAA,GACA;cACA;YACA;cACAR,MAAA,CAAAV,QAAA,CAAAC,KAAA,CAAAvB,IAAA,CAAAwB,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}